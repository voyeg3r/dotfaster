# skel
snippet _skel "Inserts shelbang and other stuf" b
#!/usr/bin/env bash
#     Created: `date +%Y-%m-%d\ %H:%M`
# Last Change: 2018 mai 29 10:04
#      Author: ${1:`!v g:snips_author`}
#     Twitter: ${2:`!v g:snips_twitter`}
#     Licence: GPL (see http://www.gnu.org/licenses/gpl.txt)
${0:# press Ctrl-j to jump placeholders}
endsnippet

# Shebang. Executing bash via /usr/bin/env makes scripts more portable.
snippet #! "shebang" b
#!/usr/bin/env bash
# Created: `date +%Y-%m-%d\ %H:%M`
# Last Change: `date +%Y-%m-%d\ %H:%M`
# Author: ${1:`!v g:snips_author`}
# Twitter: ${2:`!v g:snips_twitter`}
${0:# press Ctrl-j to jump placeholders}
endsnippet

snippet shebang "shebang" b
# Created: `date +%Y-%m-%d\ %H:%M`
# Last Change: `date +%Y-%m-%d\ %H:%M`
# Author: ${1:`!v g:snips_author`}
# Twitter: ${2:`!v g:snips_twitter`}
${0:# press Ctrl-j to jump placeholders}

endsnippet

snippet sh
#!/usr/bin/env bash
# Created: `date +%Y-%m-%d\ %H:%M`
# Last Change: `date +%Y-%m-%d\ %H:%M`
# vim:ft=sh:fdm=syntax:nu:
# Instituicao: ${1:instituicao}
# Proposito do script: ${2:write here the script purpose}
# Autor: `!v g:snips_author`
# site: `!v g:snips_site`
# github: `!v g:snips_twitter`
# e-mail: `!v g:snips_email`

${0:# press Ctrl-j to jump placeholders}
endsnippet

snippet has
NEEDED_COMMANDS="${1:program}"
missing_counter=0
for needed_command in $NEEDED_COMMANDS; do
	if ! hash "$needed_command" >/dev/null 2>&1; then
		printf "Command not found in PATH: %s\n" "$needed_command" >&2
		((missing_counter++))
	fi
done
if ((missing_counter > 0)); then
	printf "Minimum %d commands are missing in PATH, aborting" "$missing_counter" >&2
	exit 1
fi
${2}
endsnippet

snippet here
cat <<${1:EOF}
${1:Type your text here}
EOF

${0:# Press ctrl-j to jump here}
endsnippet

snippet ir "if user is root" w
if [ "$(id -u)" != "0" ]; then
echo "  Need be root"
	sleep 2
	exit  1
fi
${0:# Press ctrl-j to jump here}
endsnippet

snippet if
if [[ ${1:condition} ]]; then
	${0:#statements}
fi
endsnippet

snippet elif
elif [[ ${1:condition} ]]; then
	${0:#statements}
endsnippet

snippet for
for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
	${3:#statements}
done
${0:#jump outside the loop}
endsnippet

snippet fori
for ${1:needle} in ${2:haystack} ; do
	${3:#statements}
done
${0:# jump outside the loop}
endsnippet

snippet wh
while [[ ${1:condition} ]]; do
	${0:#statements}
done
endsnippet

snippet until
until [[ ${1:condition} ]]; do
	${0:#statements}
done
endsnippet

snippet case
case ${1:word} in
	${2:pattern})
	${0};;
esac
endsnippet

snippet go
while getopts '${1:o}' ${2:opts}
do
	case $$2 in
		${3:o0})
		${0:#staments};;
	esac
done
endsnippet

# Set SCRIPT_DIR variable to directory script is located.
snippet sdir
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
endsnippet

snippet root
if [ \$(id -u) -ne 0 ]; then exec sudo \$0; fi
endsnippet

snippet fun
${1:function_name}() {
	${0:#function_body}
}
endsnippet

snippet ffun
function ${1:function_name}() {
	${0:#function_body}
}
endsnippet

#snippet replay "get yes or no from user" w
#read -p "Type one response [y|n]:" response
#if [[ "${response,,}" =~ ^[^y] ]];then
#	exit 0
#fi
#${0:# press c-j}
#endsnippet

snippet replay "get yes or no from user" w
read -r -p "${1:your question}? [Y/n]: " response
response=${response,,} # tolower
if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
	${2:action}
fi
${0:# press c-j}
endsnippet

snippet ifile "if file exists" w
if [ ! -e ${1:filename}  ]; then
	echo "  file $1 do not exists"
fi
${0}
endsnippet

snippet isempty "if file is empty" w
[ -f "${1:filename}" -a ! -s "$1" ] && echo "$1 is empty'!'"

${0:# press c-j to exit snippet}
endsnippet

snippet ifdir "test if dir exists" w
[ -d ${1:namedir} ] || mkdir $1 ; cd $1
${0:# press c-j}
endsnippet

snippet "ifprog(ram)?" "test if program is installed" r
command -v ${1:prog} >/dev/null || sudo pacman -S $1
${0:# press c-j}
endsnippet

snippet lock
LOCK_FILE=/tmp/.lock
(set -C; :  > $LOCK_FILE) 2> /dev/null
if [  $? != "0" ];  then
	echo "Lock File exists - exiting"
	sleep 1
	exit 1
fi
${0:# press c-j}
endsnippet

snippet lower
${1:var}=${$1,,}
${0:#press ctrl-j}
endsnippet

snippet upper
${1:var}=${$1^^}
${0:#press ctrl-j}
endsnippet

snippet array
#ARRAY=( 'Debian Linux' 'Redhat Linux' Ubuntu Linux )
# get number of elements in the array
ELEMENTS=${#ARRAY[@]}
for (( i=0;i<$ELEMENTS;i++)); do
	${1:echo} ${ARRAY[${i}]}
done
${0:# press ctrl-j}
endsnippet

snippet alias
alias ${1:name}='${2:action}'
endsnippet

snippet usage
usage()
{
	echo "Usage: $(basename $${1:0}) ${2:argument}"
	echo "${3:explanation}"
}
endsnippet

# sets default var
snippet dvar
MYVAR=${1:{1:-default}}
endsnippet

snippet	seds
sed ${1:options} 's/${2:foo}/${3:bar}/g'
${0:press Ctrl-j to leave}
endsnippet

snippet	sedd
sed ${1:options} 's/${1:what}/d'
${0:press Ctrl-j to leave}
endsnippet

snippet lic "gpl3 licence"
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

${0: press ctrl-j}
endsnippet

snippet todo "what we need to do"
# TODO ${1:Things to be done} {`date +%Y-%m-%d\ %H:%M` `!v g:snips_author`}
endsnippet

snippet curl "sometimes I forget curl arguments" w
curl -O ${1:url}
endsnippet

snippet gnu "gnu licence" w
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
${0}
endsnippet
